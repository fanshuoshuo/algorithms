{\rtf1\ansi\ansicpg1251\uc1 \deff0\deflang1033\deflangfe1049{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f16\froman\fcharset238\fprq2 Times New Roman CE;}{\f17\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f19\froman\fcharset161\fprq2 Times New Roman Greek;}{\f20\froman\fcharset162\fprq2 Times New Roman Tur;}{\f21\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f22\fswiss\fcharset238\fprq2 Arial CE;}{\f23\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f25\fswiss\fcharset161\fprq2 Arial Greek;}{\f26\fswiss\fcharset162\fprq2 Arial Tur;}{\f27\fswiss\fcharset186\fprq2 Arial Baltic;}{\f28\fmodern\fcharset238\fprq1 Courier New CE;}{\f29\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f31\fmodern\fcharset161\fprq1 Courier New Greek;}{\f32\fmodern\fcharset162\fprq1 Courier New Tur;}{\f33\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\qc\sa120\keepn\widctlpar\adjustright \i\fs32\ul\cgrid \sbasedon0 \snext0 heading 1;}{\s2\qc\keepn\widctlpar\adjustright \f1\fs36\cgrid \sbasedon0 \snext0 
heading 2;}{\s3\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \i \sbasedon10 Definition;}{\s16\qj\sa200\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 
Problem text;}{\s17\widctlpar\adjustright \f2\fs20\lang1024\cgrid \sbasedon0 \snext17 Sample text;}{\*\cs18 \additive \i\lang1024 \sbasedon10 Math;}{\*\cs19 \additive \b \sbasedon10 Treat as value;}{\s20\qj\fi-284\li284\sa200\widctlpar\tx284\adjustright 
\fs20\cgrid \sbasedon16 \snext20 Any list;}}{\*\listtable{\list\listtemplateid68747265\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360
\jclisttab\tx360 }{\listname ;}\listid1325207459}}{\*\listoverridetable{\listoverride\listid1325207459\listoverridecount0\ls1}}{\info{\title 1998-99 ACM Northeastern European Regional Programming Contest}{\author Roman Elizarov}{\operator Roman Elizarov}
{\creatim\yr1998\mo11\dy29\hr14\min29}{\revtim\yr1998\mo11\dy29\hr14\min29}{\version2}{\edmins0}{\nofpages1}{\nofwords340}{\nofchars1939}{\*\company ---}{\nofcharsws2381}{\vern89}}\paperw11906\paperh16838\margl851\margr851\margt851\margb1134 
\widowctrl\ftnbj\aenddoc\revisions\formshade\viewkind4\viewscale108\viewzk2\pgbrdrhead\pgbrdrfoot \fet0{\*\template R:\\Microsoft Office\\\'d8\'e0\'e1\'eb\'ee\'ed\'fb\\Problem for NEERC'98.dot}\sectd 
\psz9\linex0\headery284\footery1134\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\qc\sa120\keepn\widctlpar\outlinelevel0\adjustright \i\fs32\ul\cgrid {
1998-99 ACM Northeastern European Regional Programming Contest
\par }\pard\plain \s2\qc\keepn\widctlpar\outlinelevel1\adjustright \f1\fs36\cgrid {Problem G
\par }\pard \s2\qc\sa120\keepn\widctlpar\outlinelevel1\adjustright {\'93Spell checker\'94
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {\b Input file}{\tab SPELL.IN
\par }{\b Output file}{\tab SPELL.OUT
\par }\pard \sa200\widctlpar\adjustright {\b Time limit}{\tab 10 seconds per test
\par }\pard\plain \s16\qj\sa200\widctlpar\adjustright \fs20\cgrid {You, as a member of a development team for a new spell checking program, are to write a module
 that will check the correctness of given words using a known dictionary of all correct words in all their forms.
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {If the word is absent in the dictionary then it can be replaced by correct words (from the dictionary) that can be obtained by one of the following operations:
\par {\pntext\pard\plain\f3\fs20\lang1033\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-218\li284\widctlpar\jclisttab\tx284{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1
\ls1\pnrauth1\pnrdate1714146196\pnrstart0\pnrxst1\pnrxst0\pnrxst183\pnrxst240\pnrstop4\pnrstart1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc23\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright {deleting of one letter from the word;

\par {\pntext\pard\plain\f3\fs20\lang1033\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-218\li284\widctlpar\jclisttab\tx284{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1
\ls1\pnrauth1\pnrdate1714146196\pnrstart0\pnrxst1\pnrxst0\pnrxst183\pnrxst240\pnrstop4\pnrstart1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc23\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright {
replacing of one letter in the word with an arbitrary letter;
\par {\pntext\pard\plain\s16 \f3\fs20\lang1033\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard\plain \s16\qj\fi-218\li284\sa200\widctlpar\jclisttab\tx284{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1
\ls1\pnrauth1\pnrdate1714146196\pnrstart0\pnrxst1\pnrxst0\pnrxst183\pnrxst240\pnrstop4\pnrstart1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc23\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0
\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0
\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs20\cgrid {
inserting of one arbitrary letter into the word.
\par }\pard \s16\qj\sa200\widctlpar\adjustright {Your task is to write the program that will find all possible replacements from the dictionary for every given word.
\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\f1\cgrid {Input
\par }\pard\plain \s16\qj\sa200\widctlpar\adjustright \fs20\cgrid {
The first part of the input file contains all words from the dictionary. Each word occupies its own line. This part is finished by the single character '#' on a separate line. All words are different. There will be at most 10000 words in the dictionary.

\par The next part of the file contains all words that are to be checked. Each word occupies its own line. This part is also finished by the single character '#' on a separate line. There will be at most 50 words that are to be checked.
\par All words in the input file (words from the dictionary and words to be checked) consist only of small alphabetic characters and each one contains 15 characters at most.
\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\f1\cgrid {Output
\par }\pard\plain \s16\qj\sa200\widctlpar\adjustright \fs20\cgrid {Write to the output file exactly one line for every checked word in the 
order of their appearance in the second part of the input file. If the word is correct (i.e. it exists in the dictionary) write the message: "<checked word> is correct". If the word is not correct then write this word first, then write the character ':' (
c
olon), and after a single space write all its possible replacements, separated by spaces. The replacements should be written in the order of their appearance in the dictionary (in the first part of the input file). If there are no replacements for this wo
rd then the line feed should immediately follow the colon.
\par }\trowd \trgaph108\trleft-108 \clvertalt\cltxlrtb \cellx5102\clvertalt\cltxlrtb \cellx10312\pard\plain \s3\keepn\widctlpar\intbl\outlinelevel2\adjustright \b\f1\cgrid {Sample input
\par }\pard\plain \s17\widctlpar\intbl\adjustright \f2\fs20\lang1024\cgrid {i
\par is
\par has
\par have
\par be
\par my
\par more
\par contest
\par me
\par too
\par if
\par award
\par #
\par me
\par aware
\par m
\par contest
\par hav
\par oo
\par or
\par i
\par fi
\par mre
\par #\cell }\pard\plain \s3\keepn\widctlpar\intbl\outlinelevel2\adjustright \b\f1\cgrid {Output for the sample input
\par }\pard\plain \s17\widctlpar\intbl\adjustright \f2\fs20\lang1024\cgrid {me is correct
\par aware: award
\par m: i my me
\par contest is correct
\par hav: has have
\par oo: too
\par or:
\par i is correct
\par fi: i
\par mre: more me
\par }\pard\plain \s3\keepn\widctlpar\intbl\outlinelevel2\adjustright \b\f1\cgrid {\cell }\pard\plain \widctlpar\intbl\adjustright \fs20\cgrid {\row }\pard\plain \s17\widctlpar\adjustright \f2\fs20\lang1024\cgrid {
\par }}